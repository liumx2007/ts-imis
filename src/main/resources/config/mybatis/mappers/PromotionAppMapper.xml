<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trasen.imis.dao.PromotionAppMapper">
    <select id="getCompanyList" resultType="com.trasen.imis.model.TbTree">
        select * from tb_tree where parent =(select pkid from tb_tree where parent is null) and type='dept' and is_vaild=1
    </select>
    <select id="getDeptList" resultType="com.trasen.imis.model.TbTree" parameterType="String">
        select * from tb_tree where parent=#{pkid} and type='dept' and is_vaild=1
    </select>

    <select id="getRankCheckList" resultType="com.trasen.imis.model.TbRankCheck" parameterType="java.util.Map">
        SELECT
          rch.*,
          pjf.score,
          pjf.rank,
          CONCAT(jfr.`name`, jfr.type) as rankName,
          per.dep_id,
          per.`name`,
          per.dep_name,
          per.tag_code
        FROM
          tb_rank_check rch
          LEFT JOIN tb_personnel_jf pjf ON rch.work_num = pjf.work_num
          LEFT JOIN tb_personnel per ON per.work_num = rch.work_num
          LEFT JOIN tb_jf_rank jfr on rch.old_rank=jfr.pkid
          where status=1
          <if test="tagCode_c!=null"> and per.tag_code LIKE CONCAT('%',#{tagCode_c},'%')</if>
          <if test="tagCode_d!=null"> and per.tag_code LIKE CONCAT('%',#{tagCode_d},'%')</if>
          <if test="name!=null and name!=''"> and per.name=#{name}</if>
    </select>

    <update id="updateRankCkeck" parameterType="Map">
        update tb_rank_check set status=#{status},updated=#{updated},operator=#{operator},remark=#{remark} where pkid in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.pkid}
        </foreach>
    </update>

    <update id="updatetbPersonnelJf" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update tb_personnel_jf set rank=#{item.newRank},updated=#{item.updated},operator=#{item.operator} where work_num=#{item.workNum}
        </foreach>

    </update>

    <insert id="savetbPersonnelJf" parameterType="java.util.List">
        insert into tb_personnel_jf(work_num,rank,created)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.workNum},#{item.rank},#{item.created})
        </foreach>
    </insert>

</mapper>