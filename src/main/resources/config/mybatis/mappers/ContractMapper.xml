<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trasen.imis.dao.ContractMapper">
    <select id="getTbContractList" parameterType="java.util.Map" resultType="com.trasen.imis.model.TbContract">
        select con.* from tb_contract con left join tb_personnel per on con.work_num=per.work_num where con.is_vaild=1 and per.is_vaild=1
        <if test="name!= 'undefined'.toString() and name!=null and name!=''"> and con.`name` like CONCAT('%',#{name},'%')</if>
        <if test="workNum!= 'undefined'.toString() and workNum!=null and workNum!=''"> and con.work_num like CONCAT('%',#{workNum},'%')</if>
        <if test="deptCode!= 'undefined'.toString() and deptCode!=null and deptCode!=''"> and per.tag_code like CONCAT('%',#{deptCode},'%')</if>
        <if test="qdStatus==0 and qdStatus!=''"> and con.status=0</if>
        <if test="qdStatus==1 and qdStatus!=''"><![CDATA[ and  Datediff(con.end_date,NOW())>0 and Datediff(con.end_date,NOW())<30 ]]></if>
        <if test="dtStart!= 'undefined'.toString() and dtStart!=null and dtStart!=''"> <![CDATA[ and str_to_date(con.sign_date, '%Y-%m-%d') >= str_to_date(#{dtStart}, '%Y-%m-%d') ]]></if>
        <if test="dtEnd!= 'undefined'.toString() and dtEnd!=null and dtEnd!=''"><![CDATA[ and str_to_date(con.sign_date, '%Y-%m-%d') <= str_to_date(#{dtEnd}, '%Y-%m-%d') ]]></if>
        <if test="years!=null and years!=''"> and years=#{years}</if>
        <if test="type!=null and type!=''"> and `type`=#{type}</if>
    </select>
    <insert id="insertContract" parameterType="com.trasen.imis.model.TbContract">
        <selectKey resultType="Integer" keyProperty="pkid">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_contract(`name`,con_code,work_num,entry_date,regular_date,start_date,end_date,years,`type`,con_num,xy_num,con_file,remark,updated,operator,sign_date)
        values(#{name},#{conCode},#{workNum},#{entryDate},#{regularDate},#{startDate},#{endDate},#{years},#{type},#{conNum},#{xyNum},#{conFile},#{remark},#{updated},#{operator},#{signDate})
    </insert>

    <update id="deleteContractforWorkNum" parameterType="String">
        update tb_contract set is_vaild=0 where work_num=#{workNum}
    </update>

    <update id="updateContract" parameterType="com.trasen.imis.model.TbContract">
        update tb_contract set
          `name`=#{name},
          work_num=#{workNum},
          con_code=#{conCode},
          entry_date=#{entryDate},
          regular_date=#{regularDate},
          status=#{status},
          start_date=#{startDate},
          end_date=#{endDate},
          years=#{years},
          `type`=#{type},
          con_num=#{conNum},
          xy_num=#{xyNum},
          con_file=#{conFile},
          remark=#{remark},
          updated=#{updated},
          operator=#{operator}
        where pkid=#{pkid}
    </update>

    <select id="getTbContract" parameterType="String" resultType="com.trasen.imis.model.TbContract">
        select * from tb_contract where work_num=#{workNum}  limit 1;
    </select>

    <select id="getTbContratListByDate" parameterType="java.util.Map" resultType="com.trasen.imis.model.TbContract">
        <![CDATA[SELECT
        con.*,per.dep_name
        FROM
        tb_contract con left join tb_personnel per on per.work_num=con.work_num where (Datediff(con.end_date,#{dateStrat})>0 and
        Datediff(con.end_date,#{dateEnd})<0) or Datediff(con.entry_date,#{dateEntry})>0 and con.send_status=0 ]]>
    </select>

    <select id="TbContratCount" parameterType="String" resultType="Integer">
      select count(*) from tb_contract where work_num=#{workNum} and is_vaild=1 and status=1
    </select>

    <update id="updateSendStatus" parameterType="Integer">
        update tb_contract set send_status=1 where pkid=#{pkid}
    </update>

</mapper>